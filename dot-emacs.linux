(package-initialize)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(before-save-hook (quote (delete-trailing-whitespace)))
 '(custom-enabled-themes (quote (monokai)))
 '(custom-safe-themes (quote ("64581032564feda2b5f2cf389018b4b9906d98293d84d84142d90d7986032d33" default)))
 '(global-hl-line-mode nil)
 '(global-linum-mode t)
 '(haskell-font-lock-symbols (quote unicode))
 '(haskell-indent-spaces 4)
 '(inhibit-startup-buffer-menu t)
 '(inhibit-startup-screen t)
 '(left-margin 0)
 '(linum-format "%5d  ")
 '(make-backup-files nil)
 '(menu-bar-mode nil)
 '(package-archives (quote (("gnu" . "http://elpa.gnu.org/packages/") ("melpa" . "http://melpa.org/packages/"))))
 '(show-paren-mode t)
 '(show-paren-style (quote mixed))
 '(tabbar-background-color nil)
 '(tabbar-mode t nil (tabbar))
 '(tabbar-separator (quote (" | ")))
 '(tool-bar-mode nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 120 :width normal :foundry "default" :family "dejavu sans mono"))))
 '(tabbar-button ((t (:inherit tabbar-default))))
 '(tabbar-default ((t (:inherit variable-pitch :foreground "grey75" :height 0.8))))
 '(tabbar-highlight ((t (:underline t))))
 '(tabbar-modified ((t (:inherit tabbar-default :foreground "cyan" :box (:line-width 1 :color "white" :style released-button)))))
 '(tabbar-selected ((t (:inherit tabbar-default :foreground "SpringGreen1" :underline "brightred" :slant italic :weight semi-bold))))
 '(tabbar-separator ((t (:inherit tabbar-default))))
 '(tabbar-unselected ((t (:inherit tabbar-default)))))

;; Keyboard customization:

(global-set-key [(hyper right)] `next-multiframe-window)
(global-set-key [(hyper left)]  `previous-multiframe-window)
(global-set-key "\C-z" `undo)
(global-set-key "\C-v" `clipboard-yank)
(global-set-key "\C-b" `copy-region-as-kill)
(global-set-key "\M-g" `goto-line)
(global-set-key "\C-j" `fill-region)

(define-key global-map [\C-kp-end]    `end-of-line)
(define-key global-map [\C-kp-right]  `mark-sexp)
(define-key global-map  "\C-c\C-i"  `cscope-set-initial-directory)
(define-key global-map  "\C-c\C-r"  `cscope-unset-initial-directory)
(define-key global-map  [f1] `cscope-pop-mark)
(define-key global-map  [f2] `cscope-find-this-text-string)
(define-key global-map  [f3] `cscope-find-functions-calling-this-function)
(define-key global-map  [f4]  `cscope-find-this-symbol)
(define-key global-map  [f5]  `cscope-find-this-file)
(define-key global-map  [f6]  `cscope-find-global-definition-no-prompting)
(define-key global-map  [f7]  `cscope-find-global-definition)

(define-key global-map [(meta z)] `undo)
(define-key global-map [(meta v)]  `clipboard-yank)
(define-key global-map [(meta c)]  `copy-region-as-kill)
(define-key global-map [(meta up)] `backward-paragraph)
(define-key global-map [(meta down)]  `forward-paragraph)
(define-key global-map [(meta {)] `tabbar-backward)
(define-key global-map [(meta })] `tabbar-forward)

;; Custom behavior
(add-hook 'before-save-hook 'delete-trailing-whitespace)

;; Irony mode behavior
(add-hook 'c++-mode-hook 'irony-mode)
(add-hook 'c-mode-hook 'irony-mode)
(add-hook 'objc-mode-hook 'irony-mode)

;; replace the `completion-at-point' and `complete-symbol' bindings in
;; irony-mode's buffers by irony-mode's asynchronous function
(defun my-irony-mode-hook ()
  (define-key irony-mode-map [remap completion-at-point]
	'irony-completion-at-point-async)
  (define-key irony-mode-map [remap complete-symbol]
	'irony-completion-at-point-async))
(add-hook 'irony-mode-hook 'my-irony-mode-hook)

;; Only needed on Windows
(when (eq system-type 'windows-nt)
  (setq w32-pipe-read-delay 0))
